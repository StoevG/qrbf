{"ast":null,"code":"export default {\n  data() {\n    return {\n      output: ''\n    };\n  },\n  methods: {\n    async showJoke() {\n      try {\n        const response = await fetch('https://official-joke-api.appspot.com/random_joke?api-key=491ecedda4714fceae44f614302a4be5');\n        const joke = await response.json();\n        this.output = `${joke.setup} - ${joke.punchline}`;\n      } catch (error) {\n        this.output = 'Failed to fetch a joke.';\n      }\n    },\n    async showQuote() {\n      try {\n        const response = await fetch('https://api.api-ninjas.com/v1/quotes?category=happiness', {\n          headers: {\n            'X-Api-Key': 'YOUR_API_KEY'\n          } // Replace 'YOUR_API_KEY' with your actual API key\n        });\n        const quotes = await response.json();\n        console.log(q);\n        if (quotes && quotes.length > 0) {\n          const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n          this.output = `<blockquote>\"${randomQuote.quote}\"</blockquote><footer>- ${randomQuote.author}</footer>`;\n        } else {\n          this.output = 'Failed to fetch a quote.';\n        }\n      } catch (error) {\n        this.output = 'Failed to fetch a quote.';\n      }\n    },\n    async showMeme() {\n      try {\n        const response = await fetch('https://api.apileague.com/retrieve-random-meme?api-key=491ecedda4714fceae44f614302a4be5');\n        const data = await response.json();\n        if (data && data.url) {\n          this.output = `<img src=\"${data.url}\" alt=\"Random Meme\">`;\n        } else {\n          this.output = 'Failed to fetch a meme.';\n        }\n      } catch (error) {\n        this.output = 'Failed to fetch a meme.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","output","methods","showJoke","response","fetch","joke","json","setup","punchline","error","showQuote","headers","quotes","console","log","q","length","randomQuote","Math","floor","random","quote","author","showMeme","url"],"sources":["/Users/georgi.stoev/qrbf/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"container\">\n    <button @click=\"showJoke\">Joke</button>\n    <button @click=\"showQuote\">Quote</button>\n    <button @click=\"showMeme\">Meme</button>\n    <div id=\"output\" v-html=\"output\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      output: ''\n    };\n  },\n  methods: {\n    async showJoke() {\n      try {\n        const response = await fetch('https://official-joke-api.appspot.com/random_joke?api-key=491ecedda4714fceae44f614302a4be5');\n        const joke = await response.json();\n        this.output = `${joke.setup} - ${joke.punchline}`;\n      } catch (error) {\n        this.output = 'Failed to fetch a joke.';\n      }\n    },\n    async showQuote() {\n      try {\n        const response = await fetch('https://api.api-ninjas.com/v1/quotes?category=happiness', {\n          headers: { 'X-Api-Key': 'YOUR_API_KEY' } // Replace 'YOUR_API_KEY' with your actual API key\n        });\n        const quotes = await response.json();\n        console.log(q)\n        if (quotes && quotes.length > 0) {\n          const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n          this.output = `<blockquote>\"${randomQuote.quote}\"</blockquote><footer>- ${randomQuote.author}</footer>`;\n        } else {\n          this.output = 'Failed to fetch a quote.';\n        }\n      } catch (error) {\n        this.output = 'Failed to fetch a quote.';\n      }\n    },\n    async showMeme() {\n      try {\n        const response = await fetch('https://api.apileague.com/retrieve-random-meme?api-key=491ecedda4714fceae44f614302a4be5');\n        const data = await response.json();\n        if (data && data.url) {\n          this.output = `<img src=\"${data.url}\" alt=\"Random Meme\">`;\n        } else {\n          this.output = 'Failed to fetch a meme.';\n        }\n      } catch (error) {\n        this.output = 'Failed to fetch a meme.';\n      }\n    }\n  }\n};\n</script>\n\n<style>\nbody {\n  font-family: Arial, sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n  background-color: #f0f0f0;\n}\n\n.container {\n  text-align: center;\n}\n\nbutton {\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n#output {\n  margin-top: 20px;\n  font-size: 18px;\n  overflow: auto;  /* Allow scrolling if the content is too large */\n  text-align: center;\n}\n\n#output img {\n  max-width: 100%; /* Make sure the image does not exceed the width of its container */\n  height: auto;    /* Maintain aspect ratio */\n  display: block;  /* Remove inline spacing */\n  margin: 0 auto;  /* Center the image horizontally if needed */\n}\n\n#output blockquote {\n  font-style: italic;\n  margin: 10px 0;\n}\n\n#output footer {\n  font-weight: bold;\n  margin-top: 5px;\n}\n</style>\n"],"mappings":"AAUA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,4FAA4F,CAAC;QAC1H,MAAMC,IAAG,GAAI,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAI,CAACN,MAAK,GAAI,GAAGK,IAAI,CAACE,KAAK,MAAMF,IAAI,CAACG,SAAS,EAAE;MACnD,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACT,MAAK,GAAI,yBAAyB;MACzC;IACF,CAAC;IACD,MAAMU,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMC,KAAK,CAAC,yDAAyD,EAAE;UACtFO,OAAO,EAAE;YAAE,WAAW,EAAE;UAAe,EAAE;QAC3C,CAAC,CAAC;QACF,MAAMC,MAAK,GAAI,MAAMT,QAAQ,CAACG,IAAI,CAAC,CAAC;QACpCO,OAAO,CAACC,GAAG,CAACC,CAAC;QACb,IAAIH,MAAK,IAAKA,MAAM,CAACI,MAAK,GAAI,CAAC,EAAE;UAC/B,MAAMC,WAAU,GAAIL,MAAM,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAIR,MAAM,CAACI,MAAM,CAAC,CAAC;UACrE,IAAI,CAAChB,MAAK,GAAI,gBAAgBiB,WAAW,CAACI,KAAK,2BAA2BJ,WAAW,CAACK,MAAM,WAAW;QACzG,OAAO;UACL,IAAI,CAACtB,MAAK,GAAI,0BAA0B;QAC1C;MACF,EAAE,OAAOS,KAAK,EAAE;QACd,IAAI,CAACT,MAAK,GAAI,0BAA0B;MAC1C;IACF,CAAC;IACD,MAAMuB,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMpB,QAAO,GAAI,MAAMC,KAAK,CAAC,yFAAyF,CAAC;QACvH,MAAML,IAAG,GAAI,MAAMI,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAIP,IAAG,IAAKA,IAAI,CAACyB,GAAG,EAAE;UACpB,IAAI,CAACxB,MAAK,GAAI,aAAaD,IAAI,CAACyB,GAAG,sBAAsB;QAC3D,OAAO;UACL,IAAI,CAACxB,MAAK,GAAI,yBAAyB;QACzC;MACF,EAAE,OAAOS,KAAK,EAAE;QACd,IAAI,CAACT,MAAK,GAAI,yBAAyB;MACzC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}