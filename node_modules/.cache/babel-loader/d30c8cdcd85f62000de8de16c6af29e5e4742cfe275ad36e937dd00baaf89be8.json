{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"path/to/your/logo.png\",\n  alt: \"Logo\",\n  class: \"logo\"\n})], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"button-container\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showJoke && $options.showJoke(...args))\n  }, \"Joke\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.showQuote && $options.showQuote(...args))\n  }, \"Quote\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.showMeme && $options.showMeme(...args))\n  }, \"Meme\")]), _createElementVNode(\"div\", {\n    id: \"output\",\n    innerHTML: $data.output\n  }, null, 8 /* PROPS */, _hoisted_4)]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","showJoke","showQuote","showMeme","innerHTML","$data","output","_hoisted_4"],"sources":["/Users/georgi.stoev/qrbf/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"container\">\n    <header>\n      <img src=\"path/to/your/logo.png\" alt=\"Logo\" class=\"logo\" />\n    </header>\n    <div class=\"button-container\">\n      <button @click=\"showJoke\">Joke</button>\n      <button @click=\"showQuote\">Quote</button>\n      <button @click=\"showMeme\">Meme</button>\n    </div>\n    <div id=\"output\" v-html=\"output\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      output: ''\n    };\n  },\n  methods: {\n    async showJoke() {\n      try {\n        const response = await fetch('https://official-joke-api.appspot.com/random_joke?api-key=491ecedda4714fceae44f614302a4be5');\n        const joke = await response.json();\n        this.output = `${joke.setup} - ${joke.punchline}`;\n      } catch (error) {\n        this.output = 'Failed to fetch a joke.';\n      }\n    },\n    async showQuote() {\n      try {\n        const response = await fetch('https://api.api-ninjas.com/v1/quotes', {\n          headers: { 'X-Api-Key': 'vl5FLLIYtTCY42hm7iNp/g==NlmsIgh671OneanK' } \n        });\n        const quotes = await response.json();\n        console.log(quotes)\n        if (quotes && quotes.length > 0) {\n          const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n          this.output = `<blockquote>\"${randomQuote.quote}\"</blockquote><footer>- ${randomQuote.author}</footer>`;\n        } else {\n          this.output = 'Failed to fetch a quote.';\n        }\n      } catch (error) {\n        this.output = 'Failed to fetch a quote.';\n      }\n    },\n    async showMeme() {\n      try {\n        const response = await fetch('https://api.apileague.com/retrieve-random-meme?api-key=491ecedda4714fceae44f614302a4be5');\n        const data = await response.json();\n        if (data && data.url) {\n          this.output = `<img src=\"${data.url}\" alt=\"Random Meme\">`;\n        } else {\n          this.output = 'Failed to fetch a meme.';\n        }\n      } catch (error) {\n        this.output = 'Failed to fetch a meme.';\n      }\n    }\n  }\n};\n</script>\n\n<style>\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f0f4f8; /* Light blue-gray background */\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n\n.container {\n  text-align: center;\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  max-width: 600px;\n  width: 100%;\n}\n\nheader {\n  margin-bottom: 20px;\n}\n\n.logo {\n  width: 150px; /* Adjust as needed */\n  height: auto;\n}\n\n.button-container {\n  margin-bottom: 20px;\n}\n\nbutton {\n  background-color: #007bff; /* Blue background */\n  border: none;\n  color: white;\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #0056b3; /* Darker blue on hover */\n}\n\n#output {\n  margin-top: 20px;\n  font-size: 18px;\n  overflow: auto; /* Allow scrolling if the content is too large */\n  text-align: center;\n}\n\n#output img {\n  max-width: 100%; /* Make sure the image does not exceed the width of its container */\n  height: auto; /* Maintain aspect ratio */\n  display: block; /* Remove inline spacing */\n  margin: 0 auto; /* Center the image horizontally if needed */\n}\n\n#output blockquote {\n  font-style: italic;\n  margin: 10px 0;\n  padding: 10px;\n  border-left: 4px solid #007bff; /* Blue border on the left */\n  background: #f9f9f9; /* Light background for the blockquote */\n}\n\n#output footer {\n  font-weight: bold;\n  margin-top: 5px;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;gCAClBC,mBAAA,CAES,iB,aADPA,mBAAA,CAA2D;EAAtDC,GAAG,EAAC,uBAAuB;EAACC,GAAG,EAAC,MAAM;EAACH,KAAK,EAAC;;;EAE/CA,KAAK,EAAC;AAAkB;mBALjC;;uBACEI,mBAAA,CAUM,OAVNC,UAUM,GATJC,UAES,EACTL,mBAAA,CAIM,OAJNM,UAIM,GAHJN,mBAAA,CAAuC;IAA9BO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,MAAI,GAC9BT,mBAAA,CAAyC;IAAhCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,SAAA,IAAAF,QAAA,CAAAE,SAAA,IAAAH,IAAA,CAAS;KAAE,OAAK,GAChCT,mBAAA,CAAuC;IAA9BO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,QAAA,IAAAH,QAAA,CAAAG,QAAA,IAAAJ,IAAA,CAAQ;KAAE,MAAI,E,GAEhCT,mBAAA,CAAuC;IAAlCF,EAAE,EAAC,QAAQ;IAACgB,SAAe,EAAPC,KAAA,CAAAC;0BAV7BC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}